(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{230:function(e,t,n){"use strict";n.r(t);n(11),n(2),n(1),n(36),n(55);var r=n(19),o={middleware:["auth"],data:function(){return{expiredToken:"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJPbmxpbmUgSldUIEJ1aWxkZXIiLCJpYXQiOjE1ODQxNDYyMjMsImV4cCI6MTU4NDE0NjIyNCwiYXVkIjoid3d3LmV4YW1wbGUuY29tIiwic3ViIjoianJvY2tldEBleGFtcGxlLmNvbSIsIkdpdmVuTmFtZSI6IkpvaG5ueSIsIlN1cm5hbWUiOiJSb2NrZXQiLCJFbWFpbCI6Impyb2NrZXRAZXhhbXBsZS5jb20iLCJSb2xlIjpbIk1hbmFnZXIiLCJQcm9qZWN0IEFkbWluaXN0cmF0b3IiXX0.dVuTXohoUOOhJWoinmgmBxVp2G_bm_5C0Yk6GqH4JbU",tokenExpiresAt:null,refreshTokenExpiresAt:null}},computed:{isLoggedInWithOauth2:function(){return"oauth2mock"===this.$auth.$state.strategy&&this.$auth.$state.loggedIn}},created:function(){this.updateDisplayedTokens()},methods:{invalidateToken:function(){this.$auth.strategy.token.set(this.expiredToken),this.updateDisplayedTokens()},invalidateBothTokens:function(){this.invalidateToken(),this.$auth.strategy.refreshToken.set(this.expiredToken),this.updateDisplayedTokens()},sendRequests:function(){var e=this;return Object(r.a)(regeneratorRuntime.mark((function t(){var n,i,r;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:for(t.prev=0,n=[],i=1;i<3;i++)r=e.$auth.ctx.$axios.get("/oauth2mockserver/cats"),n.push(r);return t.next=5,Promise.all(n);case 5:e.updateDisplayedTokens(),t.next=15;break;case 8:if(t.prev=8,t.t0=t.catch(0),"ExpiredAuthSessionError"!==t.t0.name){t.next=14;break}console.log("Caught ExpiredAuthSessionError. This is ok. Sessions can expire."),t.next=15;break;case 14:throw t.t0;case 15:case"end":return t.stop()}}),t,null,[[0,8]])})))()},refreshTokens:function(){this.$auth.refreshTokens().catch((function(e){if("ExpiredAuthSessionError"!==e.name)throw e;console.log("Caught ExpiredAuthSessionError. This is ok. Sessions can expire.")}))},updateDisplayedTokens:function(){this.tokenExpiresAt=this.getTokenExpirationDateString(this.$auth.strategy.token._getExpiration()),this.refreshTokenExpiresAt=this.getTokenExpirationDateString(this.$auth.strategy.refreshToken._getExpiration())},getTokenExpirationDateString:function(e){try{return new Date(e).toDateString()}catch(e){return"-"}}}},h=n(48),component=Object(h.a)(o,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[e.isLoggedInWithOauth2?n("div",[n("h3",[e._v("Oauth2 token refresh tester")]),e._v("\n    Here you can test the automatic token refresh handling. You can read more about how it works in the docs.\n    "),n("hr"),e._v(" "),e._m(0),e._v(" "),n("br"),e._v(" "),n("b-btn-group",[n("b-btn",{attrs:{variant:"info"},on:{click:e.sendRequests}},[e._v("\n        Send requests\n      ")]),e._v(" "),n("b-btn",{staticClass:"ml-4",attrs:{variant:"info"},on:{click:e.refreshTokens}},[e._v("\n        Refresh tokens\n      ")]),e._v(" "),n("b-btn",{staticClass:"ml-4",attrs:{variant:"info"},on:{click:e.invalidateToken}},[e._v("\n        Invalidate token\n      ")]),e._v(" "),n("b-btn",{staticClass:"ml-4",attrs:{variant:"info"},on:{click:e.invalidateBothTokens}},[e._v("\n        Invalidate token and refresh token\n      ")])],1),e._v(" "),n("br"),e._v(" "),n("br"),e._v(" "),n("b-col",{attrs:{md:"12"}},[n("b-card",{attrs:{title:"Current token expiration dates"}},[e._v("\n        Token: "+e._s(e.tokenExpiresAt)+"\n        "),n("br"),e._v("\n        Refresh token: "+e._s(e.refreshTokenExpiresAt)+"\n      ")])],1),e._v(" "),n("hr")],1):n("div",[n("b-alert",{attrs:{show:"",variant:"info"}},[e._v("\n      You need to login with oauth2 if you want to test this feature.\n    ")])],1),e._v(" "),n("b-btn-group",[n("b-button",{on:{click:function(t){return e.$auth.logout()}}},[e._v("\n      Logout\n    ")])],1)],1)}),[function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("p",[this._v('\n        Open the network tab and click "Send requests". Notice the two requests that are sent to our mock API\n        "cats".\n      ')]),this._v(" "),t("p",[this._v('\n        Click "Invalidate token", and resend the requests. Notice the token request sent just before the two requests.\n        Nuxt auth detected the token was expired, and refreshed it before sending the requests.\n      ')]),this._v(" "),t("p",[this._v('\n        Click "Invalidate token and refresh token", and resend the requests. This time, the token cannot be refreshed,\n        as even the refresh token is expired. Nuxt auth throws "ExpiredAuthSessionError" and logs the user out.\n      ')])])}],!1,null,null,null);t.default=component.exports}}]);